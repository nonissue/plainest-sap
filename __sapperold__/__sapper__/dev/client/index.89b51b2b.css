ul.svelte-zsgvok{margin:0 0 1em 0;line-height:1.5;padding:0}h2.svelte-zsgvok{font-size:1.6em;font-weight:700;margin:0 0 0.5em 0}li.svelte-zsgvok{list-style-type:none;border-bottom:1px solid #ccc;padding:5px 0;display:block;width:inline}li.svelte-zsgvok::before{}a.svelte-zsgvok{text-decoration:none;font-weight:bold}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguODliNTFiMmIuY3NzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL2Jsb2cvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuICBleHBvcnQgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuICAgIHJldHVybiB0aGlzLmZldGNoKGBibG9nLmpzb25gKVxuICAgICAgLnRoZW4ociA9PiByLmpzb24oKSlcbiAgICAgIC50aGVuKHBvc3RzID0+IHtcbiAgICAgICAgcmV0dXJuIHsgcG9zdHMgfTtcbiAgICAgIH0pO1xuICB9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgZXhwb3J0IGxldCBwb3N0cztcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4gIHVsIHtcbiAgICBtYXJnaW46IDAgMCAxZW0gMDtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cblxuICBoMiB7XG4gICAgZm9udC1zaXplOiAxLjZlbTtcbiAgICAvKiB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyAqL1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbiAgfVxuXG4gIGxpIHtcbiAgICAvKiBtYXJnaW46IDAgMCAwLjVlbSAwOyAqL1xuICAgIC8qIGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbDsgKi9cbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG4gICAgcGFkZGluZzogNXB4IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IGlubGluZTtcbiAgfVxuICBsaTo6YmVmb3JlIHtcbiAgICAvKiBjb250ZW50OiBcIi1cIjsgKi9cbiAgICAvKiBwYWRkaW5nLXJpZ2h0OiA1cHg7ICovXG4gIH1cblxuICBhIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPkJsb2c8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgyPlJlY2VudCBwb3N0czwvaDI+XG5cbjx1bD5cbiAgeyNlYWNoIHBvc3RzIGFzIHBvc3R9XG4gICAgPCEtLSB3ZSdyZSB1c2luZyB0aGUgbm9uLXN0YW5kYXJkIGByZWw9cHJlZmV0Y2hgIGF0dHJpYnV0ZSB0b1xuXHRcdFx0XHR0ZWxsIFNhcHBlciB0byBsb2FkIHRoZSBkYXRhIGZvciB0aGUgcGFnZSBhcyBzb29uIGFzXG5cdFx0XHRcdHRoZSB1c2VyIGhvdmVycyBvdmVyIHRoZSBsaW5rIG9yIHRhcHMgaXQsIGluc3RlYWQgb2Zcblx0XHRcdFx0d2FpdGluZyBmb3IgdGhlICdjbGljaycgZXZlbnQgLS0+XG4gICAgPGxpPlxuICAgICAgPGEgcmVsPVwicHJlZmV0Y2hcIiBocmVmPVwiYmxvZy97cG9zdC5zbHVnfVwiPntwb3N0LnRpdGxlfTwvYT5cbiAgICAgIGJ5XG4gICAgICA8YSByZWw9XCJwcmVmZXRjaFwiIGhyZWY9XCJhdXRob3Ive3Bvc3QuYXV0aG9yfVwiPlxuICAgICAgICA8Y29kZT57cG9zdC5hdXRob3J9PC9jb2RlPlxuICAgICAgPC9hPlxuICAgIDwvbGk+XG4gIHsvZWFjaH1cbjwvdWw+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZUUsRUFBRSxjQUFDLENBQUMsQUFDRixNQUFNLENBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUNqQixXQUFXLENBQUUsR0FBRyxDQUNoQixPQUFPLENBQUUsQ0FBQyxBQUNaLENBQUMsQUFFRCxFQUFFLGNBQUMsQ0FBQyxBQUNGLFNBQVMsQ0FBRSxLQUFLLENBRWhCLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLE1BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEFBQ3JCLENBQUMsQUFFRCxFQUFFLGNBQUMsQ0FBQyxBQUdGLGVBQWUsQ0FBRSxJQUFJLENBQ3JCLGFBQWEsQ0FBRSxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FDN0IsT0FBTyxDQUFFLEdBQUcsQ0FBQyxDQUFDLENBQ2QsT0FBTyxDQUFFLEtBQUssQ0FDZCxLQUFLLENBQUUsTUFBTSxBQUNmLENBQUMsQUFDRCxnQkFBRSxRQUFRLEFBQUMsQ0FBQyxBQUdaLENBQUMsQUFFRCxDQUFDLGNBQUMsQ0FBQyxBQUNELGVBQWUsQ0FBRSxJQUFJLENBQ3JCLFdBQVcsQ0FBRSxJQUFJLEFBQ25CLENBQUMifQ== */